on:
  push:
    branches:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - name: 'archive-reader'
            path: 'src/archive-reader/**'
          - name: 'athena-s3'
            path: 'src/athena-s3/**'
          - name: 'cloudtrail'
            path: 'src/cloudtrail/**'
          - name: 'cloudtrail-sns'
            path: 'src/cloudtrail-sns/**'
          - name: 'cloudwatch-logs'
            path: 'src/cloudwatch-logs/**'
          - name: 'cloudwatch-metrics'
            path: 'src/cloudwatch-metrics/**'
          - name: 'elasticsearch-reporter'
            path: 'src/elasticsearch-reporter/**'
          - name: 'kafka'
            path: 'src/kafka/**'
          - name: 'kinesis'
            path: 'src/kinesis/**'
          - name: 'lambda-extension'
            path: 'src/lambda-extension/**'
          - name: 'lambda-manager'
            path: 'src/lambda-manager/**'
          - name: 'lambda-secretLayer'
            path: 'src/lambda-secretLayer/**'
          - name: 'mongodb-atlas'
            path: 'src/mongodb-atlas/**'
          - name: 'msk'
            path: 'src/msk/**'
          - name: 'resource-metadata'
            path: 'src/resource-metadata/**'
          - name: 'resource-tags'
            path: 'src/resource-tags/**'
          - name: 's3'
            path: 'src/s3/**'
          - name: 's3-sns'
            path: 'src/s3-sns/**'
          - name: 'sf-eventlog'
            path: 'src/sf-eventlog/**'
          - name: 'sns'
            path: 'src/sns/**'
          - name: 'vpc-flow-logs'
            path: 'src/vpc-flow-logs/**'
          
          # Add more applications here...
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1
      - id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            '${{ matrix.app.name }}':
              - '${{ matrix.app.path }}'
      - if: steps.changes.outputs[matrix.app.name] == 'true'
        name: ${{ matrix.app.name }} Build
        run: sam build --use-container
        working-directory: ./src/${{ matrix.app.name }}
      - if: steps.changes.outputs[matrix.app.name] == 'true'
        name: ${{ matrix.app.name }} Package
        working-directory: ./src/${{ matrix.app.name }}
        run: |
          sam package \
             --s3-bucket juanfunctions \
             --s3-prefix ${{ matrix.app.name }} \
             --output-template-file packaged.yaml
      - if: steps.changes.outputs[matrix.app.name] == 'true'
        name: ${{ matrix.app.name }} Publish
        run: sam publish --template packaged.yaml
        working-directory: ./src/${{ matrix.app.name }}
      - if: steps.changes.outputs[matrix.app.name] == 'true'
        name: ${{ matrix.app.name }} Store
        working-directory: ./src/${{ matrix.app.name }}
        run: |
          aws s3 cp \
            $(yq -r '.Resources | to_entries | .[] | select(.key == "LambdaLayer" or .key == "LambdaFunction") | .value.Properties | to_entries | .[] | select(.key == "ContentUri" or .key == "CodeUri") | .value' packaged.yaml) \
            s3://juanfunctions-us-east-1/${{ matrix.app.name }}.zip
